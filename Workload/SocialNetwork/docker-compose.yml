version: "3.9"
services:

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    container_name: nginx
    depends_on:
      - unique-id-service
      - media-service
      - user-service
      - url-shorten-service
      - user-mention-service
      - text-service
      - url-shorten-mongodb
      - social-graph-mongodb
      - post-storage-mongodb
      - home-timeline-mongodb
      - user-timeline-mongodb
      - init-social-graph
      - compose-post-service
      - post-storage-service
      - user-timeline-service
      - home-timeline-service
      - social-graph-service
    ports:
      - "5001-5011:5001-5011"

  prometheus:
    image: "prom/prometheus:latest"
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml:ro"


  unique-id-service:
    image: smj8612/social_network_mj:latest
    container_name: unique-id-service
    expose:
      - "5001" # needed for microservice
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn unique_id_service:app --log-level critical --host 0.0.0.0 --port 5001


  media-service:
    image: smj8612/social_network_mj:latest
    container_name: media-service
    expose:
      - "5002"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn media_service:app --log-level critical --host 0.0.0.0 --port 5002

  user-service:
    image: smj8612/social_network_mj:latest
    container_name: user-service
    expose:
      - "5003"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn user_service:app --log-level critical  --host 0.0.0.0 --port 5003

  url-shorten-service:
    image: smj8612/social_network_mj:latest
    container_name: url-shorten-service
    expose:
      - "5004"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn url_shorten_service:app --log-level critical  --host 0.0.0.0 --port 5004

  user-mention-service:
    image: smj8612/social_network_mj:latest
    container_name: user-mention-service
    expose:
      - "5005"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn user_mention_service:app --log-level critical  --host 0.0.0.0 --port 5005


  text-service:
    image: smj8612/social_network_mj:latest
    container_name: text-service
    expose:
      - "5006"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn text_service:app --log-level critical  --host 0.0.0.0 --port 5006

  compose-post-service:
    image: smj8612/social_network_mj:latest
    container_name: compose-post-service
    expose:
      - "5007"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn compose_post_service:app --log-level critical  --host 0.0.0.0 --port 5007


  post-storage-service:
    image: smj8612/social_network_mj:latest
    container_name: post-storage-service
    expose:
      - "5008"
    deploy:
      replicas: 1
    depends_on:
      post-storage-mongodb:
        condition: service_started
    command:
      - /bin/sh
      - -c
      - uvicorn post_storage_service:app --log-level critical  --host 0.0.0.0 --port 5008

  user-timeline-service:
    image: smj8612/social_network_mj:latest
    container_name: user-timeline-service
    expose:
      - "5009"
    deploy:
      replicas: 1
    depends_on:
      user-timeline-mongodb:
        condition: service_started
    command:
      - /bin/sh
      - -c
      - uvicorn user_timeline_service:app --log-level critical  --host 0.0.0.0 --port 5009

  home-timeline-service:
    image: smj8612/social_network_mj:latest
    container_name: home-timeline-service
    expose:
      - "5010"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn home_timeline_service:app --log-level critical --host 0.0.0.0 --port 5010


  social-graph-service:
    image: smj8612/social_network_mj:latest
    container_name: social-graph-service
    expose:
      - "5011"
    deploy:
      replicas: 1
    depends_on:
      social-graph-mongodb:
        condition: service_started
    command:
      - /bin/sh
      - -c
      - uvicorn social_graph_service:app --log-level critical --host 0.0.0.0 --port 5011

  # MongoDBs
  url-shorten-mongodb:
    image: mongo
    container_name: url-shorten-mongodb
    ports:
      - '27017:27017'
    command: mongod --quiet --logpath /dev/null

  social-graph-mongodb:
    image: mongo
    container_name: social-graph-mongodb
    ports:
      - '27018:27017'
    command: mongod --quiet --logpath /dev/null

  post-storage-mongodb:
    image: mongo
    container_name: post-storage-mongodb
    ports:
      - '27019:27017'
    command: mongod --quiet --logpath /dev/null

  user-timeline-mongodb:
    image: mongo
    container_name: user-timeline-mongodb
    ports:
      - '27020:27017'
    command: mongod --quiet --logpath /dev/null

  home-timeline-mongodb:
    image: mongo
    container_name: home-timeline-mongodb
    ports:
      - '27021:27017'
    command: mongod --quiet --logpath /dev/null


  init-social-graph:
    image: smj8612/social_network_mj:latest
    container_name: init-social-graph
    depends_on:
      social-graph-mongodb:
        condition: service_started
      url-shorten-mongodb:
        condition: service_started
      home-timeline-mongodb:
        condition: service_started
      user-timeline-mongodb:
        condition: service_started
      post-storage-mongodb:
        condition: service_started
    entrypoint:
      - python3
      - utils/init_social_graph.py


  runq-exporter:
    image: smj8612/runq-exporter:latest
    privileged: true
    container_name: runq-exporter
    ports:
      - "8000:8000"
    depends_on:
      - nginx
      - unique-id-service
      - media-service
      - user-service
      - url-shorten-service
      - user-mention-service
      - text-service
      - url-shorten-mongodb
      - social-graph-mongodb
      - post-storage-mongodb
      - home-timeline-mongodb
      - user-timeline-mongodb
      - init-social-graph
      - compose-post-service
      - post-storage-service
      - user-timeline-service
      - home-timeline-service
      - social-graph-service
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/proc
      - /home/ec2-user/runq_result:/home/ec2-user/runq_result