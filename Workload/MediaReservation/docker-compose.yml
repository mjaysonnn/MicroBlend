version: "3.9"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      prometheus:
        condition: service_started
      unique-id-service:
        condition: service_started
      text-service:
        condition: service_started
      user-service:
        condition: service_started
      user-storage-mongodb:
        condition: service_started
      rating-service:
        condition: service_started
      rating-mongodb:
        condition: service_started
      movie-id-service:
        condition: service_started
      review-storage-service:
        condition: service_started
      review-storage-mongodb:
        condition: service_started
      movie-review-service:
        condition: service_started
      movie-review-mongodb:
        condition: service_started
      user-review-service:
        condition: service_started
      user-review-mongodb:
        condition: service_started
      compose-review-service:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "5001-5011:5001-5011"

  prometheus:
    image: "prom/prometheus:latest"
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml:ro"

  unique-id-service:
    image: smj8612/media_reservation_mj:latest
    container_name: unique-id-service
    expose:
      - "5001"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn unique_id_service:app --log-level critical --host 0.0.0.0 --port 5001

  text-service:
    image: smj8612/media_reservation_mj:latest
    container_name: text-service
    expose:
      - "5002" # will distribute by nginx
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn upload_text_service:app --log-level critical --host 0.0.0.0 --port 5002

  user-service:
    image: smj8612/media_reservation_mj:latest
    container_name: user-service
    expose:
      - "5003"
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn user_service:app --log-level critical  --host 0.0.0.0 --port 5003

  user-storage-mongodb:
    image: mongo
    container_name: user-storage-mongodb
    ports:
      - "27017:27017"
    command: mongod --quiet --logpath /dev/null

  rating-service:
    image: smj8612/media_reservation_mj:latest
    container_name: rating-service
    expose:
      - "5004" # needed for microservice
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn rating_service:app --log-level critical  --host 0.0.0.0 --port 5004

  rating-mongodb:
    image: mongo
    container_name: rating-mongodb
    ports:
      - "27018:27017"
    command: mongod --quiet --logpath /dev/null

  movie-id-service:
    image: smj8612/media_reservation_mj:latest
    container_name: movie-id-service
    expose:
      - "5005" # needed for microservice
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn movie_id_service:app --log-level critical  --host 0.0.0.0 --port 5005

  movie-id-mongodb:
    image: mongo
    container_name: movie-id-mongodb
    ports:
      - "27019:27017"
    command: mongod --quiet --logpath /dev/null

  review-storage-service:
    image: smj8612/media_reservation_mj:latest
    container_name: review-storage-service
    expose:
      - "5006" # needed for microservice
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn review_storage_service:app --log-level critical  --host 0.0.0.0 --port 5006

  review-storage-mongodb:
    image: mongo
    container_name: review-storage-mongodb
    ports:
      - "27020:27017"
    command: mongod --quiet --logpath /dev/null

  movie-review-service:
    image: smj8612/media_reservation_mj:latest
    container_name: movie-review-service
    expose:
      - "5007" # needed for microservice
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn movie_review_service:app --log-level critical  --host 0.0.0.0 --port 5007

  movie-review-mongodb:
    image: mongo
    container_name: movie-review-mongodb
    ports:
      - "27021:27017"
    command: mongod --quiet --logpath /dev/null

  user-review-service:
    image: smj8612/media_reservation_mj:latest
    container_name: user-review-service
    expose:
      - "5008"
    deploy:
      replicas: 1
    depends_on:
      user-review-mongodb:
        condition: service_started
    command:
      - /bin/sh
      - -c
      - uvicorn user_review_service:app --log-level critical  --host 0.0.0.0 --port 5008

  user-review-mongodb:
    image: mongo
    container_name: user-review-mongodb
    ports:
      - "27022:27017"
    command: mongod --quiet --logpath /dev/null

  compose-review-service:
    image: smj8612/media_reservation_mj:latest
    container_name: compose-review-service
    expose:
      - "5009" # nginx port
    deploy:
      replicas: 1
    command:
      - /bin/sh
      - -c
      - uvicorn compose_review:app --log-level critical  --host 0.0.0.0 --port 5009

  runq-exporter:
    image: smj8612/runq-exporter:latest
    privileged: true
    container_name: runq-exporter
    ports:
      - "8000:8000"
    depends_on:
      nginx:
        condition: service_started
      prometheus:
        condition: service_started
      unique-id-service:
        condition: service_started
      text-service:
        condition: service_started
      user-service:
        condition: service_started
      user-storage-mongodb:
        condition: service_started
      rating-service:
        condition: service_started
      rating-mongodb:
        condition: service_started
      movie-id-service:
        condition: service_started
      review-storage-service:
        condition: service_started
      review-storage-mongodb:
        condition: service_started
      movie-review-service:
        condition: service_started
      movie-review-mongodb:
        condition: service_started
      user-review-service:
        condition: service_started
      user-review-mongodb:
        condition: service_started
      compose-review-service:
        condition: service_started
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/proc
      - /home/ec2-user/runq_result:/home/ec2-user/runq_result
